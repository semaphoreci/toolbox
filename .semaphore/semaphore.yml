version: v1.0
name: Toolbox S2 project
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

execution_time_limit:
  minutes: 10

global_job_config:
  prologue:
    commands:
      # Disconnect from cache server
      - checkout
      - bash release/create.sh

blocks:
  - name: Static Code Analysis
    dependencies: []
    task:
      prologue:
        commands:
          - sudo apt-get install shellcheck
      jobs:
        - name: ShellCheck
          commands:
            - shellcheck sem-service || true
            - shellcheck sem-version || true
            - shellcheck cache       || true
            - shellcheck libcheckout || true
            - 'shellcheck sem-service -f gcc | wc -l && [[ "$(shellcheck sem-service -f gcc | wc -l)" -le 76 ]]'
            - 'shellcheck sem-version -f gcc | wc -l && [[ "$(shellcheck sem-version -f gcc | wc -l)" -le 21 ]]'
            - 'shellcheck cache       -f gcc | wc -l && [[ "$(shellcheck cache -f gcc | wc -l)" -le 152 ]]'
            - 'shellcheck libcheckout -f gcc | wc -l && [[ "$(shellcheck libcheckout -f gcc | wc -l)" -le 89 ]]'
            - shellcheck install-package

  - name: Sem Version Tests bionic
    dependencies: []
    task:
      prologue:
        commands:
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local

      jobs:
        - name: Sem Version
          commands:
            - bats tests/sem_version_bionic.bats

  - name: 'Sem Version Tests container'
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-2
        containers:
          - name: main
            image: 'registry.semaphoreci.com/android:30-flutter'
      prologue:
        commands:
          - source tests/sftp_server/start_on_mac.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: 'Sem Version Flutter'
          commands:
            - bats tests/sem_version_container.bats

  - name: Sem Service Tests
    dependencies: []
    task:
      prologue:
        commands:
          - source release/create.sh
          - cd ~/$SEMAPHORE_GIT_DIR/
          - source release/install_in_tests.sh
      jobs:
        - name: Sem service tests
          matrix:
            - env_var: TEST
              values:
                - mysql
                - postgres
                - postgis
                - redis
                - memcached
                - rabbitmq
                - mongodb
                - elasticsearch
                - cassandra
                - rethinkdb
          commands:
            - bash tests/sem_service/$TEST

  - name: 'Bats: Mac'
    dependencies: []
    task:
      agent:
        machine:
          type: a1-standard-4
          os_image: macos-xcode12

      prologue:
        commands:
          - source tests/sftp_server/start_on_mac.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local

      jobs:
        - name: 'Bats: Mac'
          matrix:
            - env_var: TEST
              values:
                - tests/macos_cache.bats
                - tests/macos_autocache.bats
                - tests/libcheckout.bats
                - tests/artifacts.bats
                - tests/test-results.bats
                - tests/macOS_sem_version.bats
          commands:
            - bats --report-formatter junit --tap --timing $TEST
      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Mac" --suite-prefix=$TEST'

  - name: 'Bats: Docker'
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu1804
        containers:
          - name: main
            image: 'semaphoreci/ruby:2.6.2'
      prologue:
        commands:
          - source tests/sftp_server/start_on_docker.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: 'Bats'
          matrix:
            - env_var: TEST
              values:
                - tests/cache.bats
                - tests/libcheckout.bats
                - tests/artifacts.bats
                - tests/test-results.bats
          commands:
            - bats --report-formatter junit --tap --timing $TEST
      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Docker" --suite-prefix=$TEST'

  - name: 'Bats: Minimal Docker'
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu1804
        containers:
          - name: main
            image: 'semaphoreci/alpine:3.9'
      prologue:
        commands:
          - apk add --update docker openrc
          - source tests/sftp_server/start_on_docker.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: 'Bats'
          matrix:
            - env_var: TEST
              values:
                - tests/cache.bats
                - tests/libcheckout.bats
                - tests/artifacts.bats
                - tests/test-results.bats
          commands:
            - bats --report-formatter junit --tap --timing $TEST
      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Minimal Docker" --suite-prefix=$TEST'

  - name: 'Bats: Linux'
    dependencies: []
    task:
      prologue:
        commands:
          - source tests/sftp_server/start_on_linux.sh
          - sudo apt-get install -y python3.8-dev
          - sem-version python 3.8
          - sem-version go 1.13
          - sem-version php 7.3.23
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: 'Bats'
          matrix:
            - env_var: TEST
              values:
                - tests/install_package.bats
                - tests/autocache.bats
                - tests/cache.bats
                - tests/libcheckout.bats
                - tests/base.bats
                - tests/artifacts.bats
                - tests/compiler.bats
                - tests/test-results.bats
          commands:
            - bats --report-formatter junit --tap --timing $TEST
      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Linux" --suite-prefix=$TEST'

  - name: "Cache CLI: Tests"
    dependencies: []
    run:
      when: "change_in('/cache-cli', {pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - checkout && cd cache-cli
          - make test.setup
      jobs:
        - name: "Test"
          commands:
            - make test
      epilogue:
        always:
          commands:
            - docker-compose logs s3
            - test-results publish junit-report.xml

  - name: "Cache CLI: Lint"
    dependencies: []
    run:
      when: "change_in('/cache-cli', {pipeline_file: 'ignore'})"
    task:
      env_vars:
        - name: GO111MODULE
          value: "on"
      prologue:
        commands:
          - sem-version go 1.16
          - checkout && cd cache-cli
      jobs:
        - name: Lint
          commands:
            - go get -u github.com/mgechev/revive
            - make lint

after_pipeline:
  task:
    jobs:
      - name: Submit Reports
        commands:
          - test-results gen-pipeline-report

promotions:
  - name: Release
    pipeline_file: release.yml
    auto_promote_on:
      - result: passed
        branch:
          - ^refs/tags/v*
version: v1.0
name: Toolbox S2 project
agent:
  machine:
    type: e2-standard-2
    os_image: ubuntu2004

execution_time_limit:
  minutes: 30

blocks:
  - name: Build local CLIs
    dependencies: []
    task:
      jobs:
        - name: Build cache CLI
          commands:
            - sem-version go 1.22
            - "export GOPATH=~/go"
            - "export PATH=/home/semaphore/go/bin:$PATH"
            - checkout
            - cd cache-cli
            - make build.linux ARCH=amd64
            - make build.linux ARCH=arm64
            - make build.darwin ARCH=amd64
            - make build.darwin ARCH=arm64
            - make build.windows
            - artifact push workflow bin/linux/amd64/cache -d bin/linux/amd64/cache
            - artifact push workflow bin/linux/arm64/cache -d bin/linux/arm64/cache
            - artifact push workflow bin/darwin/amd64/cache -d bin/darwin/amd64/cache
            - artifact push workflow bin/darwin/arm64/cache -d bin/darwin/arm64/cache
            - artifact push workflow bin/windows/cache.exe -d bin/windows/cache.exe
        - name: Build sem-context CLI
          commands:
            - sem-version go 1.22
            - "export GOPATH=~/go"
            - "export PATH=/home/semaphore/go/bin:$PATH"
            - checkout
            - cd sem-context
            - make build.linux ARCH=amd64
            - make build.linux ARCH=arm64
            - make build.darwin ARCH=amd64
            - make build.darwin ARCH=arm64
            - make build.windows
            - artifact push workflow bin/linux/amd64/sem-context -d bin/linux/amd64/sem-context
            - artifact push workflow bin/linux/arm64/sem-context -d bin/linux/arm64/sem-context
            - artifact push workflow bin/darwin/amd64/sem-context -d bin/darwin/amd64/sem-context
            - artifact push workflow bin/darwin/arm64/sem-context -d bin/darwin/arm64/sem-context
            - artifact push workflow bin/windows/sem-context.exe -d bin/windows/sem-context.exe

  - name: Static Code Analysis
    dependencies: []
    task:
      prologue:
        commands:
          - sudo apt-get install shellcheck
          - checkout
      jobs:
        - name: Shell check
          commands:
            - shellcheck sem-service
            - shellcheck sem-version
            - shellcheck -s bash libcheckout
            - shellcheck install-package
            - shellcheck sem-semantic-release
        - name: PowerShell check
          commands:
            - make pwsh.lint

  - name: "PowerShell: tests"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      jobs:
        - name: checkout tests
          commands:
            - make pwsh.test

  - name: Sem Version Tests Focal
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: e2-standard-2
          os_image: ubuntu2004
      prologue:
        commands:
          - checkout
          - sudo apt-get update
          - sudo apt-get install -y libargon2-0
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local

      jobs:
        - name: Sem Version
          matrix:
            - env_var: TEST
              values:
                - elixir
                - erlang
                - firefox
                - gcc
                - go
                - java
                - kubectl
                - node
                - php
                - python
                - ruby
                - scala
          commands:
            - bats tests/sem_version_focal/${TEST}.bats


  - name: Sem Version Tests Jammy
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: e2-standard-2
          os_image: ubuntu2204
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: Sem Version
          matrix:
            - env_var: TEST
              values:
                - elixir
                - erlang
                - gcc
                - go
                - java
                - kubectl
                - node
                - php
                - python
                - ruby
                - scala
          commands:
            - bats tests/sem_version_jammy/${TEST}.bats


  - name: Sem Version Tests Jammy ARM
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: r1-standard-4
          os_image: ubuntu2204
      prologue:
        commands:
          - wget https://github.com/semaphoreci/artifact/releases/download/v0.6.2/artifact_Linux_arm64.tar.gz -O /tmp/artifact_Linux_arm64.tar.gz
          - sudo tar -xf /tmp/artifact_Linux_arm64.tar.gz -C /usr/local/bin/
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: Sem Version
          matrix:
            - env_var: TEST
              values:
                - elixir
                - erlang
                - gcc
                - go
                - java
                - kubectl
                - node
                - php
                - python
                - ruby
                - scala
          commands:
            - bats tests/sem_version_jammy/${TEST}.bats

  - name: Sem Version Tests Noble
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2404
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: Sem Version
          matrix:
            - env_var: TEST
              values:
                - elixir
                - erlang
                - gcc
                - go
                - java
                - kubectl
                - node
                - php
                - python
                - ruby
                - scala
          commands:
            - bats tests/sem_version_noble/${TEST}.bats

  - name: Sem Service Tests Jammy ARM
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: r1-standard-4
          os_image: ubuntu2204
      prologue:
        commands:
          - wget https://github.com/semaphoreci/artifact/releases/download/v0.6.2/artifact_Linux_arm64.tar.gz -O /tmp/artifact_Linux_arm64.tar.gz
          - sudo tar -xf /tmp/artifact_Linux_arm64.tar.gz -C /usr/local/bin/
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: Sem Service Tests Jammy ARM
          matrix:
            - env_var: SERVICE
              values:
                - postgres
                - memcached
          commands:
            - sem-service start ${SERVICE}


  - name: "Sem Version Tests container"
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: e2-standard-2
          os_image: ubuntu2004
        containers:
          - name: main
            image: "registry.semaphoreci.com/android:34-flutter"
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source tests/sftp_server/start_on_mac.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: "Sem Version Flutter"
          commands:
            - bats tests/sem_version_container.bats

  - name: Sem Service Tests Focal
    dependencies:
      - "Build local CLIs"
    task:
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/create.sh
          - cd ~/$SEMAPHORE_GIT_DIR/
          - source release/install_in_tests.sh
      jobs:
        - name: Sem Service Tests Focal
          matrix:
            - env_var: TEST
              values:
                - mysql
                - postgres
                - postgis
                - redis
                - memcached
                - rabbitmq
                - mongodb
                - opensearch
                - elasticsearch
                - cassandra
                - rethinkdb
          commands:
            - bash tests/sem_service/$TEST

  - name: "Bats: xcode15"
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: a1-standard-4
          os_image: macos-xcode15

      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source tests/sftp_server/start_on_mac.sh

      jobs:
        - name: "Cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST

        - name: "Cache tests -e"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - cd ~ && rm -rf toolbox
            - set -evo pipefail
            - checkout --use-cache

        - name: "Non-cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/artifacts.bats
                - tests/test-results.bats
                - tests/macOS_sem_version.bats
                - tests/sem-semantic-release.bats
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST
      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Mac" --suite-prefix=$TEST'

  - name: "Bats: xcode15 arm"
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: a2-standard-4
          os_image: macos-xcode15

      prologue:
        commands:
          - checkout
          - brew update
          - brew upgrade ruby-build
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source tests/sftp_server/start_on_mac.sh

      jobs:
        - name: "Cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST

        - name: "Cache tests -e"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - source release/install_in_tests.sh
            - cd ~ && rm -rf toolbox
            - set -evo pipefail
            - checkout --use-cache
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST


        - name: "Non-cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/artifacts.bats
                - tests/test-results.bats
                - tests/xcode15_sem_version.bats
                - tests/sem-semantic-release.bats
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST
      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Mac" --suite-prefix=$TEST'

  - name: "Bats: Docker"
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: e2-standard-2
          os_image: ubuntu2004
        containers:
          - name: main
            image: "semaphoreci/ruby:2.6.2"
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source tests/sftp_server/start_on_docker.sh
      jobs:
        - name: "Cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST

        - name: "Cache tests -e"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - source release/install_in_tests.sh
            - cd ~ && rm -rf toolbox
            - set -evo pipefail
            - checkout --use-cache
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST

        - name: "Non-cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/artifacts.bats
                - tests/test-results.bats
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST
      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Docker" --suite-prefix=$TEST'

  - name: "Bats: Minimal Docker"
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: e2-standard-2
          os_image: ubuntu2004
        containers:
          - name: main
            image: "semaphoreci/alpine:3.9"
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - apk add --update docker openrc
          - source tests/sftp_server/start_on_docker.sh
      jobs:
        - name: "Cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST

        - name: "Non-cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/artifacts.bats
                - tests/test-results.bats
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST
      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Minimal Docker" --suite-prefix=$TEST'

  - name: "Bats: Linux"
    dependencies:
      - "Build local CLIs"
    task:
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source tests/sftp_server/start_on_linux.sh
          - sudo apt-get install -y python3.8-dev
          - sem-version python 3.8
          - sem-version go 1.22
          - sem-version php 7.3.23
      jobs:
        - name: "Cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST

        - name: "Cache tests -e"
          matrix:
            - env_var: TEST
              values:
                - tests/libcheckout.bats
            - env_var: SEMAPHORE_CACHE_ARCHIVE_METHOD
              values:
                - shell-out
                - native
                - native-parallel
          commands:
            - source release/install_in_tests.sh
            - cd ~ && rm -rf toolbox
            - set -evo pipefail
            - checkout --use-cache
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST


        - name: "Non-cache tests"
          matrix:
            - env_var: TEST
              values:
                - tests/install_package.bats
                - tests/artifacts.bats
                - tests/compiler.bats
                - tests/test-results.bats
                - tests/enetwork.bats
                - tests/sem-semantic-release.bats
          commands:
            - source release/install_in_tests.sh
            - git submodule init && git submodule update
            - sudo ./tests/support/bats-core/install.sh /usr/local
            - bats --report-formatter junit --tap --timing $TEST

      epilogue:
        always:
          commands:
            - 'test-results publish report.xml --name="Bats: Linux" --suite-prefix=$TEST'

  - name: "Cache CLI: Tests"
    dependencies: []
    task:
      prologue:
        commands:
          - checkout && cd cache-cli
          - make test.setup
      jobs:
        - name: "Test"
          commands:
            - make test
      epilogue:
        always:
          commands:
            - docker-compose logs s3
            - test-results publish junit-report.xml

  - name: "Cache CLI: Lint"
    dependencies: []
    task:
      env_vars:
        - name: GO111MODULE
          value: "on"
      prologue:
        commands:
          - sem-version go 1.22
          - checkout && cd cache-cli
      jobs:
        - name: Lint
          commands:
            - go install github.com/mgechev/revive@latest
            - make lint

  - name: "Security checks"
    dependencies: []
    task:
      env_vars:
        # https://github.com/aquasecurity/trivy/discussions/7668#discussioncomment-10884984
        # workaround for trivy TOOMANYREQUESTS issues
        - name: TRIVY_DB_REPOSITORY
          value: "ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db"
        - name: TRIVY_JAVA_DB_REPOSITORY
          value: "ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db"
      secrets:
        - name: security-toolbox-shared-read-access
      prologue:
        commands:
          - checkout && cd $CLI_NAME
          - mv ~/.ssh/security-toolbox ~/.ssh/id_rsa
          - sudo chmod 600 ~/.ssh/id_rsa
      jobs:
        - name: Check dependencies
          matrix:
            - env_var: CLI_NAME
              values:
                - cache-cli
                - sem-context
          commands:
            - make check.deps
        - name: Check code
          matrix:
            - env_var: CLI_NAME
              values:
                - cache-cli
                - sem-context
          commands:
            - make check.static
      epilogue:
        always:
          commands:
            - 'if [ -f results.xml ]; then test-results publish --name="$CLI_NAME: Security checks" results.xml; fi'

  - name: SHM Test Focal
    dependencies:
      - "Build local CLIs"
    task:
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local

      jobs:
        - name: SHM Test Focal
          commands:
            - sed -i "s/\/tmp\/system-metrics/\/tmp\/system-metrics2/g" ~/.toolbox/system-metrics-collector
            - . ~/.toolbox/system-metrics-collector &
            - sleep 2
            - bats tests/shm/shm_ubuntu.bats
            - cat /tmp/system-metrics2

  - name: SHM Test Docker
    dependencies:
      - "Build local CLIs"
    task:
      agent:
        machine:
          type: e2-standard-2
          os_image: ubuntu2004
        containers:
          - name: main
            image: "registry.semaphoreci.com/ubuntu:20.04"
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local

      jobs:
        - name: SHM Test Docker
          commands:
            - sed -i "s/\/tmp\/system-metrics/\/tmp\/system-metrics2/g" ~/.toolbox/system-metrics-collector
            - . ~/.toolbox/system-metrics-collector &
            - sleep 2
            - bats tests/shm/shm_docker.bats
            - cat /tmp/system-metrics2

after_pipeline:
  task:
    jobs:
      - name: Submit Reports
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - test-results gen-pipeline-report

promotions:
  - name: Release
    pipeline_file: release.yml
    auto_promote_on:
      - result: passed
        branch:
          - ^refs/tags/v*

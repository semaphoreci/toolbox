package parsers

import (
	"testing"

	"github.com/semaphoreci/toolbox/test-results/pkg/parser"
)

func Test_RSpec_CommonParse(t *testing.T) {
	parserWants := map[string]parser.TestResults{
		"empty": {
			ID:         "99ec6b78-8d28-33bb-9c4b-e38fd0000bf4",
			Name:       "Rspec Suite",
			Framework:  "rspec",
			IsDisabled: false,
			Summary: parser.Summary{
				Total:    0,
				Passed:   0,
				Skipped:  0,
				Error:    0,
				Failed:   0,
				Disabled: 0,
				Duration: 0,
			},
			Status:        "error",
			StatusMessage: "EOF",
			Suites:        []parser.Suite{},
		},
		"basic": {
			ID:         "99ec6b78-8d28-33bb-9c4b-e38fd0000bf4",
			Name:       "Rspec Suite",
			Framework:  "rspec",
			IsDisabled: false,
			Summary: parser.Summary{
				Total:    3,
				Passed:   3,
				Skipped:  0,
				Error:    0,
				Failed:   0,
				Disabled: 0,
				Duration: 0,
			},
			Status:        "success",
			StatusMessage: "",
			Suites: []parser.Suite{
				{
					ID:         "961b9fe2-d1d3-3f8a-9d14-2adc16701583",
					Name:       "foo",
					IsSkipped:  false,
					IsDisabled: false,
					Timestamp:  "",
					Hostname:   "",
					Package:    "",
					Properties: parser.Properties(nil),
					Summary: parser.Summary{
						Total:    3,
						Passed:   3,
						Skipped:  0,
						Error:    0,
						Failed:   0,
						Disabled: 0,
						Duration: 0,
					},
					SystemOut: "",
					SystemErr: "",
					Tests: []parser.Test{
						{
							ID:        "03891380-f78d-3ad2-9095-30cc51a85076",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "bar",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
						{
							ID:        "6ecfb2de-99ef-39cf-a1e4-abd5684ff98f",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "baz",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
						{
							ID:        "03891380-f78d-3ad2-9095-30cc51a85076",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "bar",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
					},
				},
			},
		},
		"multi-suite": {
			ID:         "dda9b4d2-9e8d-3547-9fd0-24bd78148a7a",
			Name:       "ff",
			Framework:  "rspec",
			IsDisabled: false,
			Summary: parser.Summary{
				Total:    10,
				Passed:   10,
				Skipped:  0,
				Error:    0,
				Failed:   0,
				Disabled: 0,
				Duration: 0,
			},
			Status:        "success",
			StatusMessage: "",
			Suites: []parser.Suite{
				{
					ID:         "03999e27-03e1-37e7-adbf-e712e5f35d67",
					Name:       "foo",
					IsSkipped:  false,
					IsDisabled: false,
					Timestamp:  "",
					Hostname:   "",
					Package:    "",
					Properties: parser.Properties(nil),
					Summary: parser.Summary{
						Total:    2,
						Passed:   2,
						Skipped:  0,
						Error:    0,
						Failed:   0,
						Disabled: 0,
						Duration: 0,
					},
					SystemOut: "",
					SystemErr: "",
					Tests: []parser.Test{
						{
							ID:        "a30beb90-b62a-3a18-92e8-e071aa9b0ae8",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "bar",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
						{
							ID:        "9c0d06f6-a28c-3187-9618-4901992bee66",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "baz",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
					},
				},
				{
					ID:         "7a9dd0d0-961d-36b7-af47-94deab34e474",
					Name:       "1234",
					IsSkipped:  false,
					IsDisabled: false,
					Timestamp:  "",
					Hostname:   "",
					Package:    "",
					Properties: parser.Properties(nil),
					Summary: parser.Summary{
						Total:    2,
						Passed:   2,
						Skipped:  0,
						Error:    0,
						Failed:   0,
						Disabled: 0,
						Duration: 0,
					},
					SystemOut: "",
					SystemErr: "",
					Tests: []parser.Test{
						{
							ID:        "a30beb90-b62a-3a18-92e8-e071aa9b0ae8",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "bar",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
						{
							ID:        "9c0d06f6-a28c-3187-9618-4901992bee66",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "baz",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
					},
				},
				{
					ID:         "f2385b0c-5155-3ead-ac47-64e58b31546f",
					Name:       "",
					IsSkipped:  false,
					IsDisabled: false,
					Timestamp:  "",
					Hostname:   "",
					Package:    "",
					Properties: parser.Properties(nil),
					Summary: parser.Summary{
						Total:    2,
						Passed:   2,
						Skipped:  0,
						Error:    0,
						Failed:   0,
						Disabled: 0,
						Duration: 0,
					},
					SystemOut: "",
					SystemErr: "",
					Tests: []parser.Test{
						{
							ID:        "a30beb90-b62a-3a18-92e8-e071aa9b0ae8",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "bar",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
						{
							ID:        "9c0d06f6-a28c-3187-9618-4901992bee66",
							File:      "",
							Classname: "",
							Package:   "",
							Name:      "baz",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
					},
				},
				{
					ID:         "d1a81530-f601-38c2-af37-a8356472a6d0",
					Name:       "foo/bar:123",
					IsSkipped:  false,
					IsDisabled: false,
					Timestamp:  "",
					Hostname:   "",
					Package:    "",
					Properties: parser.Properties(nil),
					Summary: parser.Summary{
						Total:    1,
						Passed:   1,
						Skipped:  0,
						Error:    0,
						Failed:   0,
						Disabled: 0,
						Duration: 0,
					},
					SystemOut: "",
					SystemErr: "",
					Tests: []parser.Test{
						{
							ID:        "0f9464bf-7411-30bb-b904-4ca6d072a72c",
							File:      "foo/bar:123",
							Classname: "",
							Package:   "",
							Name:      "bar",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
					},
				},
				{
					ID:         "6d4a7e05-ad28-356d-8702-88354c932af5",
					Name:       "foo/baz",
					IsSkipped:  false,
					IsDisabled: false,
					Timestamp:  "",
					Hostname:   "",
					Package:    "",
					Properties: parser.Properties(nil),
					Summary: parser.Summary{
						Total:    1,
						Passed:   1,
						Skipped:  0,
						Error:    0,
						Failed:   0,
						Disabled: 0,
						Duration: 0,
					},
					SystemOut: "",
					SystemErr: "",
					Tests: []parser.Test{
						{
							ID:        "2f700dbd-786b-3a26-a106-aab9961212d3",
							File:      "foo/baz",
							Classname: "",
							Package:   "",
							Name:      "baz",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
					},
				},
				{
					ID:         "5cb1cb0c-6e74-30b5-a3c9-915413b4d6db",
					Name:       "foo/bar",
					IsSkipped:  false,
					IsDisabled: false,
					Timestamp:  "",
					Hostname:   "",
					Package:    "",
					Properties: parser.Properties(nil),
					Summary: parser.Summary{
						Total:    2,
						Passed:   2,
						Skipped:  0,
						Error:    0,
						Failed:   0,
						Disabled: 0,
						Duration: 0,
					},
					SystemOut: "",
					SystemErr: "",
					Tests: []parser.Test{
						{
							ID:        "c30a583e-58ec-3a0c-b70e-261b962eb5c0",
							File:      "foo/bar",
							Classname: "foo",
							Package:   "",
							Name:      "bar",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
						{
							ID:        "8bff79c0-77f6-3cb0-ae98-bbb3742b2a38",
							File:      "foo/bar",
							Classname: "bar",
							Package:   "",
							Name:      "bar",
							Duration:  0,
							State:     "passed",
							Failure:   (*parser.Failure)(nil),
							Error:     (*parser.Error)(nil),
							SystemOut: "",
							SystemErr: "",
							SemEnv: parser.SemEnv{
								ProjectID:    "project-id",
								PipelineID:   "ppl-id",
								WorkflowID:   "wf-id",
								JobStartedAt: "job-creation-time",
								JobName:      "job-name",
								JobID:        "job-id",
								AgentType:    "agent-machine-type",
								AgentOsImage: "agent-machine-os-image",
								GitRefType:   "git-ref-type",
								GitRefName:   "",
								GitRefSha:    "",
							},
						},
					},
				},
			},
		},
		"invalid-root": {
			ID:         "99ec6b78-8d28-33bb-9c4b-e38fd0000bf4",
			Name:       "Rspec Suite",
			Framework:  "rspec",
			IsDisabled: false,
			Summary: parser.Summary{
				Total:    0,
				Passed:   0,
				Skipped:  0,
				Error:    0,
				Failed:   0,
				Disabled: 0,
				Duration: 0,
			},
			Status:        "error",
			StatusMessage: "Invalid root element found: <nontestsuites>, must be one of <testsuites>, <testsuite>",
			Suites:        []parser.Suite{},
		},
	}

	testCases := buildParserTestCases(commonParserTestCases, parserWants)
	runParserTests(t, NewRSpec(), testCases)
}

func Test_RSpec_SpecificParse(t *testing.T) {
	specificParserTestCases := map[string]string{}
	parserWants := map[string]parser.TestResults{}

	testCases := buildParserTestCases(specificParserTestCases, parserWants)
	runParserTests(t, NewRSpec(), testCases)
}

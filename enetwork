#!/bin/bash

## Variables, fixed for now, will be env vars or secrets later
GatewayUsername=${SEMAPHORE_DOCKERGW_USER,-''}
GatewayPassword=${SEMAPHORE_DOCKERGW_PASSWORD,-''}
GatewayEndPoint=${SEMAPHORE_DOCKERGW_ENDPOINT,-''}
GatewayEndPointPort=${SEMAPHORE_DOCKERGW_ENDPOINT_PORT,-''}

## Create docker env change directory
sudo mkdir -p /etc/systemd/system/docker.service.d

## Create proxy.conf
en_start(){

  CanSetProxy=$(curl --write-out %{http_code} --head --silent --output /dev/null -x http://"$GatewayUsername":"$GatewayPassword"@"$GatewayEndPoint":"$GatewayEndPointPort" https://www.google.com)

  if [ $CanSetProxy -eq 200 ]; then
    echo "[Service]"                                                                                                       | sudo tee    /etc/systemd/system/docker.service.d/proxy.conf > /dev/null
    echo 'Environment="HTTP_PROXY=http://'"$GatewayUsername"':'"$GatewayPassword"'@'"$GatewayEndPoint"':'"$GatewayEndPointPort"'"' | sudo tee -a /etc/systemd/system/docker.service.d/proxy.conf > /dev/null
    echo 'Environment="HTTPS_PROXY=http://'"$GatewayUsername"':'"$GatewayPassword"'@'"$GatewayEndPoint"':'"$GatewayEndPointPort"'"'| sudo tee -a /etc/systemd/system/docker.service.d/proxy.conf > /dev/null
    echo "Environment=\"NO_PROXY='*.semreg.com,registry.semaphoreci.com,localhost,127.0.0.1,::1'\""                        | sudo tee -a /etc/systemd/system/docker.service.d/proxy.conf > /dev/null
    echo 'Docker gateway is set, reloading docker daemon'
    en_reload && echo 'Docker daemon reloaded' || echo 'Failed to reload docker daemon'
  else
    echo 'Authentication error, not setting docker gateway'
  fi
}
en_stop(){
  sudo rm -f /etc/systemd/system/docker.service.d/proxy.conf
  en_reload
}

en_reload(){
  sudo systemctl daemon-reload
  ret=$?
  sudo systemctl restart docker.service
  ret2=$?
  if [ $ret -eq 0 ] && [ $ret2 -eq 0 ]; then 
    echo 0
  else
    echo 1
  fi
}


if [[ "$(uname)" == "Darwin" ]]; then
  echo "'enhanced' networking is not supported in this environment"
  exit 1
else
  if ! [[ $# -eq 1 ]]; then
    echo 'Unsupported number of parameters.'
    echo 'Usage: ./enetwork.sh [start|stop]'
  else
    case "$1" in
      "start")
         en_start
         exit 0
         ;;
      "stop")
         en_start
         exit 0
         ;;
      "*")
         echo 'Unsupported number of parameters.'
         echo 'Usage: ./enetwork.sh [start|stop]'
         exit 0
         ;;
    esac
  fi
fi
